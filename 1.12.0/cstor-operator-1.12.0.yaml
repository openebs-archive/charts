# Create the OpenEBS namespace
apiVersion: v1
kind: Namespace
metadata:
  name: openebs
---
# Create Maya Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: openebs-maya-operator
  namespace: openebs
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: cstorpoolclusters.cstor.openebs.io
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: cstor.openebs.io
  # version name to use for REST API: /apis/<group>/<version>
  version: v1
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: cstorpoolclusters
    # singular name to be used as an alias on the CLI and for display
    singular: cstorpoolcluster
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: CStorPoolCluster
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
      - cspc
  additionalPrinterColumns:
    - JSONPath: .status.healthyInstances
      name: HealthyInstances
      description: The number of healthy cStorPoolInstances
      type: integer
    - JSONPath: .status.provisionedInstances
      name: ProvisionedInstances
      description: The number of provisioned cStorPoolInstances
      type: integer
    - JSONPath: .status.desiredInstances
      name: DesiredInstances
      description: The number of desired cStorPoolInstances
      type: integer
    - JSONPath: .metadata.creationTimestamp
      name: Age
      type: date
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: cstorpoolinstances.cstor.openebs.io
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: cstor.openebs.io
  # version name to use for REST API: /apis/<group>/<version>
  version: v1
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: cstorpoolinstances
    # singular name to be used as an alias on the CLI and for display
    singular: cstorpoolinstance
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: CStorPoolInstance
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
      - cspi
  additionalPrinterColumns:
    - JSONPath: .spec.hostName
      name: HostName
      description: Host name where cstorpool instances scheduled
      type: string
    - JSONPath: .status.capacity.used
      name: Allocated
      description: The amount of storage space within the pool that has been physically allocated
      type: string
    - JSONPath: .status.capacity.free
      name: Free
      description: The amount of usable free space available in the pool
      type: string
    - JSONPath: .status.capacity.total
      name: Capacity
      description: Total amount of usable space in pool
      type: string
    - JSONPath: .status.readOnly
      name: ReadOnly
      description: Identifies the pool read only mode
      type: boolean
    - JSONPath: .status.provisionedReplicas
      name: ProvisionedReplicas
      description: Represents no.of replicas present in the pool
      type: integer
    - JSONPath: .status.healthyReplicas
      name: HealthyReplicas
      description: Represents no.of healthy replicas present in the pool
      type: integer
    - JSONPath: .spec.poolConfig.dataRaidGroupType
      name: Type
      description: The type of the storage pool
      type: string
    - JSONPath: .status.phase
      name: Status
      description: Identifies the current health of the pool
      type: string
    - JSONPath: .metadata.creationTimestamp
      name: Age
      type: date
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: cstorvolumes.cstor.openebs.io
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: cstor.openebs.io
  # version name to use for REST API: /apis/<group>/<version>
  version: v1
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: CStorVolume
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: cstorvolumes
    # singular name to be used as an alias on the CLI and for display
    singular: cstorvolume
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - cstorvolume
    - cv
  additionalPrinterColumns:
  - JSONPath: .status.phase
    name: Status
    description: Identifies the current health of the volume
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  - JSONPath: .status.capacity
    description: Current volume capacity
    name: Capacity
    type: string
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: cstorvolumeconfigs.cstor.openebs.io
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: cstor.openebs.io
  # version name to use for REST API: /apis/<group>/<version>
  version: v1
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: CStorVolumeConfig
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: cstorvolumeconfigs
    # singular name to be used as an alias on the CLI and for display
    singular: cstorvolumeconfig
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - cstorvolumeconfig
    - cvc
  additionalPrinterColumns:
  - JSONPath: .status.phase
    name: Status
    description: Identifies the volume provisioning status
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: cstorvolumepolicies.cstor.openebs.io
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: cstor.openebs.io
  # version name to use for REST API: /apis/<group>/<version>
  version: v1
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: CStorVolumePolicy
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: cstorvolumepolicies
    # singular name to be used as an alias on the CLI and for display
    singular: cstorvolumepolicy
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - cstorvolumepolicies
    - cvp
    - policy
  additionalPrinterColumns:
  - JSONPath: .status.phase
    name: Status
    description: Identifies the state of policy
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: cstorvolumereplicas.cstor.openebs.io
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: cstor.openebs.io
  # version name to use for REST API: /apis/<group>/<version>
  version: v1
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: CStorVolumeReplica
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: cstorvolumereplicas
    # singular name to be used as an alias on the CLI and for display
    singular: cstorvolumereplica
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - cvr
  additionalPrinterColumns:
  - JSONPath: .status.capacity.used
    name: Used
    description: The amount of space that is "logically" consumed by this dataset
    type: string
  - JSONPath: .status.capacity.total
    name: Allocated
    description: The amount of disk space consumed by a dataset and all its descendents
    type: string
  - JSONPath: .status.phase
    name: Status
    description: Identifies the current state of the replicas
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: cstorbackups.openebs.io
spec:
  group: openebs.io
  version: v1alpha1
  scope: Namespaced
  names:
    plural: cstorbackups
    singular: cstorbackup
    kind: CStorBackup
    shortNames:
    - cbkp
    - cbkps
    - cbackups
    - cbackup
  additionalPrinterColumns:
    - JSONPath: .spec.volumeName
      name: volume
      description: volume on which backup performed
      type: string
    - JSONPath: .spec.backupName
      name: backup/schedule
      description: Backup/schedule name
      type: string
    - JSONPath: .status
      name: Status
      description: Backup status
      type: string

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: cstorcompletedbackups.openebs.io
spec:
  group: openebs.io
  version: v1alpha1
  scope: Namespaced
  names:
    plural: cstorcompletedbackups
    singular: cstorcompletedbackup
    kind: CStorCompletedBackup
    shortNames:
    - cbkpc
    - cbackupcompleted
  additionalPrinterColumns:
    - JSONPath: .spec.volumeName
      name: volume
      description: volume on which backup performed
      type: string
    - JSONPath: .spec.backupName
      name: backup/schedule
      description: Backup/schedule name
      type: string
    - JSONPath: .spec.prevSnapName
      name: lastSnap
      description: Last successful backup snapshot
      type: string
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: cstorrestores.openebs.io
spec:
  group: openebs.io
  version: v1alpha1
  scope: Namespaced
  names:
    plural: cstorrestores
    singular: cstorrestore
    kind: CStorRestore
    shortNames:
    - crst
    - crsts
    - crestores
    - crestore
  additionalPrinterColumns:
    - JSONPath: .spec.restoreName
      name: backup
      description: backup name which is  restored
      type: string
    - JSONPath: .spec.volumeName
      name: volume
      description: volume on which restore performed
      type: string
    - JSONPath: .status
      name: Status
      description: Restore status
      type: string
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: upgradetasks.openebs.io
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: openebs.io
  # version name to use for REST API: /apis/<group>/<version>
  version: v1alpha1
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: upgradetasks
    # singular name to be used as an alias on the CLI and for display
    singular: upgradetask
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: UpgradeTask
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - utask
---
# Define Role that allows operations on K8s pods/deployments
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: openebs-cstor-operator
rules:
- apiGroups: ["*"]
  resources: ["nodes", "nodes/proxy"]
  verbs: ["*"]
- apiGroups: ["*"]
  resources: ["namespaces", "services", "pods", "deployments", "deployments/finalizers", "replicationcontrollers", "replicasets", "events", "endpoints", "configmaps", "secrets", "jobs", "cronjobs"]
  verbs: ["*"]
- apiGroups: ["*"]
  resources: ["statefulsets", "daemonsets"]
  verbs: ["*"]
- apiGroups: ["*"]
  resources: ["resourcequotas", "limitranges"]
  verbs: ["list", "watch"]
- apiGroups: ["*"]
  resources: ["certificatesigningrequests"]
  verbs: ["list", "watch"]
- apiGroups: ["*"]
  resources: ["storageclasses", "persistentvolumeclaims", "persistentvolumes"]
  verbs: ["*"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: [ "get", "list", "create", "update", "delete", "patch"]
- apiGroups: ["openebs.io"]
  resources: ["*"]
  verbs: ["*" ]
- apiGroups: ["cstor.openebs.io"]
  resources: ["*"]
  verbs: ["*" ]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
  verbs: ["get", "create", "list", "delete", "update", "patch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
- apiGroups: ["*"]
  resources: ["upgradetasks"]
  verbs: ["*"]
- apiGroups: ["*"]
  resources: ["poddisruptionbudgets"]
  verbs: ["get", "list", "create", "delete", "watch"]
---
# Bind the Service Account with the Role Privileges.
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: openebs-cstor-operator
subjects:
- kind: ServiceAccount
  name: openebs-maya-operator
  namespace: openebs
roleRef:
  kind: ClusterRole
  name: openebs-cstor-operator
  apiGroup: rbac.authorization.k8s.io
---
# Define Role that allows operations required for migration of snapshots
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: openebs-cstor-migration
rules:
- apiGroups: ["snapshot.storage.k8s.io"]
  resources: ["volumesnapshotclasses"]
  verbs: ["get", "list"]
- apiGroups: ["snapshot.storage.k8s.io"]
  resources: ["volumesnapshotcontents"]
  verbs: ["create", "get", "list"]
- apiGroups: ["snapshot.storage.k8s.io"]
  resources: ["volumesnapshots"]
  verbs: ["create", "get", "list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: openebs-cstor-migration
subjects:
- kind: ServiceAccount
  name: openebs-maya-operator
  namespace: openebs
roleRef:
  kind: ClusterRole
  name: openebs-cstor-migration
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cspc-operator
  namespace: openebs
  labels:
    name: cspc-operator
    openebs.io/component-name: cspc-operator
    openebs.io/version: 1.12.0
spec:
  selector:
    matchLabels:
      name: cspc-operator
      openebs.io/component-name: cspc-operator
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: cspc-operator
        openebs.io/component-name: cspc-operator
        openebs.io/version: 1.12.0
    spec:
      serviceAccountName: openebs-maya-operator
      containers:
      - name: cspc-operator
        imagePullPolicy: IfNotPresent
        image: openebs/cspc-operator-amd64:1.12.0
        env:
        - name: OPENEBS_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OPENEBS_SERVICEACCOUNT_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: CSPC_OPERATOR_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        # OPENEBS_IO_BASE_DIR is used to configure base directory for openebs on host path.
        # Where OpenEBS can store required files. Default base path will be /var/openebs
        # - name: OPENEBS_IO_BASE_DIR
        #   value: "/var/openebs"
        # OPENEBS_IO_CSTOR_POOL_SPARSE_DIR can be used to specify the hostpath
        # to be used for saving the shared content between the side cars
        # of cstor pool pod. This ENV is also used to indicate the location
        # of the sparse devices.
        # The default path used is /var/openebs/sparse
        #- name: OPENEBS_IO_CSTOR_POOL_SPARSE_DIR
        #  value: "/var/openebs/sparse"
        - name: OPENEBS_IO_CSPI_MGMT_IMAGE
          value: "openebs/cstor-pool-manager-amd64:1.12.0"
        - name: OPENEBS_IO_CSTOR_POOL_IMAGE
          value: "openebs/cstor-pool:1.12.0"
        - name:  OPENEBS_IO_CSTOR_POOL_EXPORTER_IMAGE
          value: "openebs/m-exporter:1.12.0"
        - name: RESYNC_INTERVAL
          value: "30"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cvc-operator
  namespace: openebs
  labels:
    name: cvc-operator
    openebs.io/component-name: cvc-operator
    openebs.io/version: 1.12.0
spec:
  selector:
    matchLabels:
      name: cvc-operator
      openebs.io/component-name: cvc-operator
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: cvc-operator
        openebs.io/component-name: cvc-operator
        openebs.io/version: 1.12.0
    spec:
      serviceAccountName: openebs-maya-operator
      containers:
      - name: cvc-operator
        imagePullPolicy: IfNotPresent
        image: openebs/cvc-operator-amd64:1.12.0
        env:
        # OPENEBS_IO_BASE_DIR is used to configure base directory for openebs on host path.
        # Where OpenEBS can store required files. Default base path will be /var/openebs
        # - name: OPENEBS_IO_BASE_DIR
        #   value: "/var/openebs"
        # OPENEBS_IO_CSTOR_TARGET_DIR can be used to specify the hostpath
        # that to be used for saving the core dump of cstor volume pod.
        # The default path used is /var/openebs/sparse
        #- name: OPENEBS_IO_CSTOR_TARGET_DIR
        #  value: "/var/openebs/sparse"
        - name: OPENEBS_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OPENEBS_SERVICEACCOUNT_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: OPENEBS_IO_CSTOR_TARGET_IMAGE
          value: "openebs/cstor-istgt:1.12.0"
        - name:  OPENEBS_IO_CSTOR_VOLUME_MGMT_IMAGE
          value: "openebs/cstor-volume-manager-amd64:1.12.0"
        - name:  OPENEBS_IO_VOLUME_MONITOR_IMAGE
          value: "openebs/m-exporter:1.12.0"
---
apiVersion: v1
kind: Service
metadata:
  name: cvc-operator-service
  namespace: openebs
  labels:
    openebs.io/component-name: cvc-operator-svc
spec:
  ports:
  - name: api
    port: 5757
    protocol: TCP
    targetPort: 5757
  selector:
    name: cvc-operator
  sessionAffinity: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openebs-cstor-admission-server
  namespace: openebs
  labels:
    app: cstor-admission-webhook
    openebs.io/component-name: cstor-admission-webhook
    openebs.io/version: 1.12.0
spec:
  replicas: 1
  strategy:
    type: Recreate
    rollingUpdate: null
  selector:
    matchLabels:
      app: cstor-admission-webhook
  template:
    metadata:
      labels:
        app: cstor-admission-webhook
        openebs.io/component-name: cstor-admission-webhook
        openebs.io/version: 1.12.0
    spec:
      serviceAccountName: openebs-maya-operator
      containers:
        - name: admission-webhook
          image: openebs/cstor-webhook-amd64:1.12.0
          imagePullPolicy: IfNotPresent
          args:
            - -alsologtostderr
            - -v=2
            - 2>&1
          env:
            - name: OPENEBS_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ADMISSION_WEBHOOK_NAME
              value: "openebs-cstor-admission-server"
            - name: ADMISSION_WEBHOOK_FAILURE_POLICY
              value: "Fail"
